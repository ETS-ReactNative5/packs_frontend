{"version":3,"sources":["components/printCP.js"],"names":["Title","Paragraph","PrintCp","state","location","columns","title","key","dataIndex","render","solution","Object","keys","map","span","dataSource","field","value","pfep","sender_client","sender_location","contact_person","contact_no","email","table3","CreateTable","left","right","className","d","Date","utc","getTime","getTimezoneOffset","ist","toLocaleString","src","process","alt","split","id","level","i","receiverDetails","length","receiver_name","item","size","pagination","bordered"],"mappings":"sOAIQA,G,WAAAA,OAAMC,E,IAAAA,UAaDC,EAAU,SAAC,GAAkB,IAChCC,EAD+B,EAAfC,SAChBD,MAGFE,EAAU,CACd,CACEC,MAAO,YACPC,IAAK,YACLC,UAAW,aAEb,CACEF,MAAO,oBACPE,UAAW,oBACXD,IAAK,qBACL,CACAD,MAAO,8BACPC,IAAK,6BACLC,UAAW,6BACXC,OAAO,SAACC,GAAD,OACL,2BACGC,OAAOC,KAAKF,GAAUG,KAAI,SAAAN,GAAG,OAC5B,uBAAKO,KAAM,IACRJ,EAASH,GACT,IACAA,EACD,oCAMV,CACED,MAAO,gCACPE,UAAW,yBACXD,IAAK,0BAEP,CACED,MAAO,sBACPE,UAAW,sBACXD,IAAK,uBACL,CACAD,MAAO,+BACPC,IAAK,YACLC,UAAW,aAEb,CACEF,MAAO,qBACPE,UAAW,yBACXD,IAAK,0BAEP,CACED,MAAO,oBACPE,UAAW,aACXD,IAAK,eAIHQ,EAAa,CACjB,CACER,IAAK,IACLS,MAAO,sBACPC,MAAOd,EAAMe,KAAKC,eAEpB,CACEZ,IAAK,IACLS,MAAO,YACPC,MAAOd,EAAMe,KAAKE,iBAEpB,CACEb,IAAK,IACLS,MAAO,SACPC,MAAOd,EAAMe,KAAKE,iBAEpB,CACEb,IAAK,IACLS,MAAO,kBACPC,MAAOd,EAAMe,KAAKG,gBAEpB,CACEd,IAAK,IACLS,MAAO,kBACPC,MAAOd,EAAMe,KAAKI,YAEpB,CACEf,IAAK,IACLS,MAAO,YACPC,MAAOd,EAAMe,KAAKK,QAGhBC,EAAU,CACd,CAAER,MAAM,gCACNT,IAAI,oBACJU,MAAM,mDAER,CAAED,MAAM,oBACNT,IAAI,kBACJU,MAAM,2BAIJQ,EAAc,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAKC,EAAR,EAAQA,MAAR,OAClB,uBAAKC,UAAU,mBACb,uBAAKd,KAAM,GAAIc,UAAU,QACtBF,GAEH,yBAAKE,UAAU,mCACb,yBAAKA,UAAU,sBAEjB,uBAAKd,KAAM,GAAIc,UAAU,QACtBD,KAIDE,EAAI,IAAIC,KACRC,EAAMF,EAAEG,UAAqC,IAAxBH,EAAEI,oBAEvBC,EADK,IAAIJ,KAAKC,EAAO,OACXI,iBAChB,OACE,yBAAKP,UAAU,sBACb,2BACE,uBAAKd,KAAM,IACT,yBAAKc,UAAU,oCACb,yBAAKA,UAAU,iBACb,yBAAKQ,IAAG,UAAKC,GAAL,kBAA+CT,UAAU,GAAGU,IAAI,eAE1E,6BACE,8BACE,sCACCJ,EAAIK,MAAM,KAAK,GAChB,6BACA,qCAEGpC,EAAMqC,SAOnB,6BACA,6BACA,2BACE,uBAAK1B,KAAM,IACT,kBAACd,EAAD,CACEyC,MAAO,EACPb,UAAU,iEAFZ,eAIG,IACAzB,EAAMe,KAAKC,iBAIlB,6BACA,kBAACM,EAAD,CACEC,KAAOX,EAAWF,KAAI,SAAC6B,EAAEnC,GAAH,OACpB,uBAAKA,IAAKmC,EAAEnC,KACV,uBAAKO,KAAM,GAAIc,UAAU,QACvB,uBAAGrB,IAAKmC,EAAEnC,KAAMmC,EAAE1B,YAIxBW,MACAZ,EAAWF,KAAI,SAAC6B,EAAEnC,GAAH,OACb,uBAAKA,IAAKmC,EAAEnC,KACV,uBAAKO,KAAM,GAAIc,UAAU,QACtBc,EAAEzB,aAMX,6BACA,kBAACQ,EAAD,CACEC,KAAO,CAAC,CAAEV,MAAM,qBAAsBT,IAAI,oBAAqBM,KAAI,SAAC6B,EAAEnC,GAAH,OACjE,uBAAKA,IAAKmC,EAAEnC,KACV,uBAAKO,KAAM,GAAIc,UAAU,QACvB,uBAAGrB,IAAKmC,EAAEnC,KAAMmC,EAAE1B,YAIxBW,MACA,CAAC,CAAEV,MAAMd,EAAMwC,gBAAgBC,OAAO,EAAEzC,EAAMwC,gBAAgB,GAAGE,cAAc,GAC5EtC,IAAI,oBAAqBM,KAAI,SAAC6B,EAAEnC,GAAH,OAC5B,uBAAKA,IAAKmC,EAAEnC,KACV,uBAAKO,KAAM,GAAIc,UAAU,QACtBzB,EAAMwC,gBAAgBC,OAAO,EAAEzC,EAAMwC,gBAAgB9B,KAAI,SAAAiC,GAAI,OAC5D,6BACGA,EAAKD,cACN,iCAEDH,EAAEzB,aAMf,6BACA,kBAACQ,EAAD,CACEC,KAAOF,EAAOX,KAAI,SAAC6B,EAAEnC,GAAH,OAChB,uBAAKA,IAAKmC,EAAEnC,KACV,uBAAKO,KAAM,GAAIc,UAAU,QACvB,uBAAGrB,IAAKmC,EAAEnC,KAAMmC,EAAE1B,YAIxBW,MACEH,EAAOX,KAAI,SAAC6B,EAAEnC,GAAH,OACT,uBAAKA,IAAKmC,EAAEnC,KACV,uBAAKO,KAAM,GAAIc,UAAU,QACvB,2BACGc,EAAEzB,cAOf,6BACA,uBACE8B,KAAK,QACLC,YAAY,EACZC,UAAQ,EACRlC,WAAYZ,EAAMwC,iBAAiB,GACnCtC,QAASA,IACX,6BACA,kBAACJ,EAAD,oGAEE,6BAFF,6EAKG,IACAE,EAAMe,KAAKC,cACX,IAPH,MASG,IACAhB,EAAMwC,gBAAgBC,OAAO,EAAE,qBAAqBzC,EAAMwC,gBAAgB,GAAGE,cAC9E,6BAXF,qFAaE,6BAbF,gDAoBS3C","file":"static/js/60.43cf41ae.chunk.js","sourcesContent":["import React from 'react';\nimport { Row,Col,Typography,Table } from 'antd'\nimport _ from 'lodash';\n\nconst { Title,Paragraph } = Typography\n\n\n// part_name:record.pfep.part_name,\n//   receiver_location: record.pfep.receivers.length>0?record.pfep.receivers[0].location:'',\n//   proposed_solution_proposal:record.standard_assets,\n//   component_per_solution:record.component_perkit,\n//   price_per_component:_.round(record.trip_cost/record.component_perkit, 2),\n//   trip_cost:record.trip_cost,\n//   parts_volume_per_month :record.volume_pm,\n//   cycle_days:record.pfep.min_cycle_days,\n\n\nexport const PrintCp = ({ location }) => {\n  const { state, } = location;\n  // const { receiverDetails} = state;\n  console.log(state,'data CP',)\n  const columns = [\n    {\n      title: 'Part Name',\n      key: 'part_name',\n      dataIndex: 'part_name'\n    },\n    {\n      title: 'Receiver Location',\n      dataIndex: 'receiver_location',\n      key: 'receiver_location',\n    },{\n      title: 'Proposed Packaging Solution',\n      key: 'proposed_solution_proposal',\n      dataIndex: 'proposed_solution_proposal',\n      render:(solution)=>(\n        <Row>\n          {Object.keys(solution).map(key=>(\n            <Col span={24}>\n              {solution[key]}\n              {' '}\n              {key}\n              <br />\n            </Col>\n          ))}\n        </Row>\n      )\n    },\n    {\n      title: 'No. of Component per Solution',\n      dataIndex: 'component_per_solution',\n      key: 'component_per_solution',\n    },\n    {\n      title: 'Price Per Component',\n      dataIndex: 'price_per_component',\n      key: 'price_per_component',\n    },{\n      title: 'Total Trip Cost Per Solution',\n      key: 'trip_cost',\n      dataIndex: 'trip_cost'\n    },\n    {\n      title: 'Parts Volume/Month',\n      dataIndex: 'parts_volume_per_month',\n      key: 'parts_volume_per_month',\n    },\n    {\n      title: 'Cycle Time (Days)',\n      dataIndex: 'cycle_days',\n      key: 'cycle_days',\n    },\n  ];\n\n  const dataSource = [\n    {\n      key: '1',\n      field: 'Emitter (Supplier):',\n      value: state.pfep.sender_client ,\n    },\n    {\n      key: '2',\n      field: 'Location:',\n      value: state.pfep.sender_location,\n    },\n    {\n      key: '3',\n      field: 'State:',\n      value: state.pfep.sender_location,\n    },\n    {\n      key: '4',\n      field: 'Contact Person:',\n      value: state.pfep.contact_person,\n    },\n    {\n      key: '5',\n      field: 'Contact Number:',\n      value: state.pfep.contact_no,\n    },\n    {\n      key: '6',\n      field: 'Email ID:',\n      value: state.pfep.email,\n    },\n  ];\n  const table3  = [\n    { field:'Flow implementation timeline:' ,\n      key:'flowImpementation',\n      value:'25-30 working days from day contract is signed.'\n    },\n    { field:'Agreement Status:' ,\n      key:'agreementStatus',\n      value:'Agreement to be signed'\n    },\n  ]\n\n  const CreateTable = ({ left,right })=>(\n    <Row className='print-cp-border'>\n      <Col span={11} className='py-1'>\n        {left}\n      </Col>\n      <div className='row align-center justify-center'>\n        <div className='print-cp-divider' />\n      </div>\n      <Col span={11} className='py-1'>\n        {right}\n      </Col>\n    </Row>\n  )\n  const d = new Date();\n  const utc = d.getTime() + (d.getTimezoneOffset() * 60000);\n  const nd = new Date(utc + (3600000*+5.5));\n  const ist =  nd.toLocaleString();\n  return (\n    <div className='print-cp-container'>\n      <Row>\n        <Col span={24}>\n          <div className='row justify-between align-center'>\n            <div className='print-cp-logo'>\n              <img src={`${process.env.PUBLIC_URL  }/home-logo.png`} className='' alt='Yantraksh' />\n            </div>\n            <div>\n              <text>\n                <b>Date : </b>\n                {ist.split(',')[0]}\n                <br />\n                <b>\n                  YNT/CP/\n                  {state.id}\n                </b>\n              </text>\n            </div>\n          </div>\n        </Col>\n      </Row>\n      <br />\n      <br />\n      <Row>\n        <Col span={24}>\n          <Title\n            level={4}\n            className='row align-center justify-center print-cp-gray print-cp-border'>\n            Proposal for\n            {' '}\n            {state.pfep.sender_client}\n          </Title>\n        </Col>\n      </Row>\n      <br />\n      <CreateTable\n        left={(dataSource.map((i,key)=>(\n          <Row key={i.key}>\n            <Col span={24} className='px-2'>\n              <b key={i.key}>{i.field}</b>\n            </Col>\n          </Row>\n        )))}\n        right={(\n        dataSource.map((i,key)=>(\n          <Row key={i.key}>\n            <Col span={24} className='px-2'>\n              {i.value}\n            </Col>\n          </Row>\n        ))\n      )}\n      />\n      <br />\n      <CreateTable\n        left={([{ field:'Receiver details :' ,key:'reveiverDetails' }].map((i,key)=>(\n          <Row key={i.key}>\n            <Col span={24} className='px-2'>\n              <b key={i.key}>{i.field}</b>\n            </Col>\n          </Row>\n        )))}\n        right={(\n        [{ value:state.receiverDetails.length>0?state.receiverDetails[0].receiver_name:''\n          ,key:'reveiverDetails' }].map((i,key)=>(\n            <Row key={i.key}>\n              <Col span={24} className='px-2'>\n                {state.receiverDetails.length>1?state.receiverDetails.map(item=>(\n                  <div>\n                    {item.receiver_name}\n                    <br />\n                  </div>\n                )):i.value}\n              </Col>\n            </Row>\n        ))\n      )}\n      />\n      <br />\n      <CreateTable\n        left={(table3.map((i,key)=>(\n          <Row key={i.key}>\n            <Col span={24} className='px-2'>\n              <b key={i.key}>{i.field}</b>\n            </Col>\n          </Row>\n        )))}\n        right={(\n          table3.map((i,key)=>(\n            <Row key={i.key}>\n              <Col span={24} className='px-2'>\n                <b>\n                  {i.value}\n                </b>\n              </Col>\n            </Row>\n          ))\n      )}\n      />\n      <br />\n      <Table\n        size='small'\n        pagination={false}\n        bordered\n        dataSource={state.receiverDetails||[]}\n        columns={columns} />\n      <br />\n      <Paragraph>\n        * Cycle time to be revisited after regular intervals, pricing may vary if cycle time varies.\n        <br />\n        YANTRA Packs will not be responsible for Loading &\n        Unloading activities at\n        {' '}\n        {state.pfep.sender_client}\n        {' '}\n        and\n        {' '}\n        {state.receiverDetails.length>1?'Multiple Receivers':state.receiverDetails[0].receiver_name}\n        <br />\n        YANTRA Packs will be responsible for reverse logistics from Destination to Origin.\n        <br />\n        The Commercial Offer is Valid for 30 days.\n      </Paragraph>\n    </div>\n  );\n};\n\nexport default PrintCp\n"],"sourceRoot":""}