{"version":3,"sources":["../../common/formFields/PFEP/PFEPStockKeeping.formFields.js","forms/PFEP/PFEPStockKeeping.form.js"],"names":["PREPStockKeepingFormFields","key","type","FORM_ELEMENT_TYPES","INPUT","others","kwargs","placeholder","customLabel","PFEPStockKeepingForm","id","onCancel","onDone","onNext","useState","loading","setLoading","useForm","form","dispatch","useDispatch","submit","data","a","ADD_PFEP_DATA","spinning","orientation","onFinish","layout","hideRequiredMark","autoComplete","style","justifyContent","slice","map","item","idx","span","toString","className","formItem","justify","htmlType","disabled","onClick","ArrowRightOutlined","fontSize"],"mappings":"0VAEaA,EAA6B,CACxC,CACEC,IAAK,oBACLC,KAAMC,IAAmBC,MACzBC,OAAQ,KACRC,OAAQ,CACNC,YAAa,sBAGjB,CACEN,IAAK,eACLK,OAAQ,CACNC,YAAa,gBAEfL,KAAMC,IAAmBC,MACzBI,YAAa,gBAEf,CACEP,IAAK,mBACLK,OAAQ,CACNC,YAAa,oBAEfL,KAAMC,IAAmBC,MACzBI,YAAa,oBACb,CACAP,IAAK,oBACLK,OAAQ,CACNC,YAAa,qBAEfL,KAAMC,IAAmBC,MACzBI,YAAa,qBAEf,CACEP,IAAK,gBACLK,OAAQ,CACNC,YAAa,iBAEfL,KAAMC,IAAmBC,MACzBI,YAAa,iBAEf,CACEP,IAAK,qBACLK,OAAQ,CACNC,YAAa,sBAEfL,KAAMC,IAAmBC,MACzBI,YAAa,uB,SCxCJC,EAAuB,SAAC,GAAmC,EAAjCC,GAAiC,EAA7BC,SAA8B,IAArBC,EAAoB,EAApBA,OAAOC,EAAa,EAAbA,OAAa,EACzCC,oBAAS,GADgC,mBAC/DC,EAD+D,KACvDC,EADuD,OAEvD,IAAKC,UAAbC,EAF+D,oBAGhEC,EAAWC,cAEXC,EAAM,uCAAG,WAAOC,GAAP,SAAAC,EAAA,6DACbP,GAAW,GADE,SAEPG,EAAS,CAAEjB,KAAKsB,IAAcF,SAFvB,OAGbN,GAAW,GACXH,IAJa,2CAAH,sDAOZ,OACE,uBAAMY,SAAUV,GACd,uBAASW,YAAY,QAArB,iBACA,uBACEC,SAAUN,EACVH,KAAMA,EACNU,OAAO,WACPC,kBAAgB,EAChBC,aAAa,OAEb,uBAAKC,MAAO,CAAEC,eAAgB,SAC3BhC,EAA2BiC,MAAM,EAAG,GAAGC,KAAI,SAACC,EAAMC,GAAP,OAC1C,uBAAKC,KAAM,GACT,yBAAKpC,IAAKmC,EAAIE,WAAYC,UAAU,OACjCC,YAASL,SAKlB,uBAAKJ,MAAO,CAAEC,eAAgB,SAC3BhC,EAA2BiC,MAAM,EAAG,GAAGC,KAAI,SAACC,EAAMC,GAAP,OAC1C,uBAAKC,KAAM,GACT,yBAAKpC,IAAKmC,EAAIE,WAAYC,UAAU,OACjCC,YAASL,SAKlB,uBAAKM,QAAQ,iBACX,yBAAKF,UAAU,OACb,uBAAQrC,KAAK,UAAUwC,SAAS,SAASC,UAAQ,GAAjD,UAGA,yBAAKJ,UAAU,QACf,uBAAQrC,KAAK,UAAU0C,QAAShC,GAAhC,WAIF,uBAAQV,KAAK,OAAOwC,SAAS,UAC3B,kBAACG,EAAA,EAAD,CAAoBd,MAAO,CAAEe,SAAS,WAQnCrC","file":"static/js/51.24a4460f.chunk.js","sourcesContent":["import { FORM_ELEMENT_TYPES } from 'web/src/constants/formFields.constant';\n\nexport const PREPStockKeepingFormFields = [\n  {\n    key: 'emitter_inventory',\n    type: FORM_ELEMENT_TYPES.INPUT,\n    others: null,\n    kwargs: {\n      placeholder: 'Emitter Inventory',\n    },\n  },\n  {\n    key: 'transit_time',\n    kwargs: {\n      placeholder: 'Transit time',\n    },\n    type: FORM_ELEMENT_TYPES.INPUT,\n    customLabel: 'Transit time',\n  },\n  {\n    key: 'emitter_location',\n    kwargs: {\n      placeholder: 'Emitter location',\n    },\n    type: FORM_ELEMENT_TYPES.INPUT,\n    customLabel: 'Emitter location',\n  },{\n    key: 'receiver_location',\n    kwargs: {\n      placeholder: 'Receiver location',\n    },\n    type: FORM_ELEMENT_TYPES.INPUT,\n    customLabel: 'Receiver location',\n  },\n  {\n    key: 'other_storage',\n    kwargs: {\n      placeholder: 'Other Storage',\n    },\n    type: FORM_ELEMENT_TYPES.INPUT,\n    customLabel: 'Other Storage',\n  },\n  {\n    key: 'receiver_inventory',\n    kwargs: {\n      placeholder: 'Receiver Inventory',\n    },\n    type: FORM_ELEMENT_TYPES.INPUT,\n    customLabel: 'Receiver Inventory',\n  },\n]\n","import React, { useState } from 'react';\nimport { Form, Col, Row, Button, Divider, Spin} from 'antd';\nimport formItem from 'hocs/formItem.hoc';\nimport { useDispatch } from 'react-redux';\nimport { ADD_PFEP_DATA } from 'common/actions';\nimport { PREPStockKeepingFormFields } from 'common/formFields/PFEP/PFEPStockKeeping.formFields';\nimport { ArrowRightOutlined } from '@ant-design/icons';\n\nexport const PFEPStockKeepingForm = ({ id, onCancel,onDone,onNext }) => {\n  const [loading,setLoading] = useState(false);\n  const [form] = Form.useForm();\n  const dispatch = useDispatch();\n\n  const submit = async (data) =>{\n    setLoading(true)\n    await dispatch({ type:ADD_PFEP_DATA,data });\n    setLoading(false)\n    onNext();\n  }\n\n  return (\n    <Spin spinning={loading}>\n      <Divider orientation='left'>Stock Keeping</Divider>\n      <Form\n        onFinish={submit}\n        form={form}\n        layout='vertical'\n        hideRequiredMark\n        autoComplete='off'\n      >\n        <Row style={{ justifyContent: 'left' }}>\n          {PREPStockKeepingFormFields.slice(0, 3).map((item, idx) => (\n            <Col span={8}>\n              <div key={idx.toString()} className='p-2'>\n                {formItem(item)}\n              </div>\n            </Col>\n          ))}\n        </Row>\n        <Row style={{ justifyContent: 'left' }}>\n          {PREPStockKeepingFormFields.slice(3, 6).map((item, idx) => (\n            <Col span={8}>\n              <div key={idx.toString()} className='p-2'>\n                {formItem(item)}\n              </div>\n            </Col>\n          ))}\n        </Row>\n        <Row justify='space-between'>\n          <div className='row'>\n            <Button type='primary' htmlType='submit' disabled>\n              Submit\n            </Button>\n            <div className='p-2' />\n            <Button type='primary' onClick={onDone}>\n              Cancel\n            </Button>\n          </div>\n          <Button type='link' htmlType='submit'>\n            <ArrowRightOutlined style={{ fontSize:30 }}  />\n          </Button>\n        </Row>\n      </Form>\n    </Spin>\n  );\n};\n\nexport default PFEPStockKeepingForm;\n\n"],"sourceRoot":""}