{"version":3,"sources":["../../common/formFields/PFEP/PFEPSolutionRequired.formFields.js","forms/PFEP/PFEPSolutionRequired.form.js"],"names":["PREPSolutionRequiredFormFields","key","kwargs","placeholder","type","FORM_ELEMENT_TYPES","SELECT","others","selectOptions","INPUT","customLabel","PFEPSolutionRequiredForm","id","onCancel","onDone","onNext","useState","loading","setLoading","useForm","form","dispatch","useDispatch","submit","useSelector","e","data","pfepData","a","ADD_PFEP_DATA","spinning","orientation","onFinish","layout","hideRequiredMark","autoComplete","style","justifyContent","slice","map","item","idx","span","toString","className","formItem","htmlType","onClick"],"mappings":"8VAEaA,EAAiC,CAC5C,CACEC,IAAK,YACLC,OAAQ,CACNC,YAAa,UAEfC,KAAMC,IAAmBC,OACzBC,OAAQ,CACNC,cAAe,CAAC,MAAO,MAAO,QAAS,YAG3C,CACEP,IAAK,mBACLC,OAAQ,CACNC,YAAa,oBAEfC,KAAMC,IAAmBI,MACzBC,YAAa,oBAEf,CACET,IAAK,QACLC,OAAQ,CACNC,YAAa,YAEfC,KAAMC,IAAmBI,MACzBC,YAAa,YAEf,CACET,IAAK,SACLC,OAAQ,CACNC,YAAa,UAEfC,KAAMC,IAAmBC,OACzBC,OAAQ,CACNC,cAAe,CAAC,YAAa,YAAa,cACxC,cAAc,cAAc,sBC9BvBG,EAA2B,SAAC,GAAmC,EAAjCC,GAAiC,EAA7BC,SAA8B,IAArBC,EAAoB,EAApBA,OAAoB,KAAbC,OAChCC,oBAAS,IADoC,mBACnEC,EADmE,KAC3DC,EAD2D,OAE3D,IAAKC,UAAbC,EAFmE,oBAGpEC,EAAWC,cAIXC,GAHSC,aAAY,SAAAC,GAAC,OAAGA,EAAEC,KAAKC,YAG1B,uCAAG,WAAOD,GAAP,SAAAE,EAAA,6DACbV,GAAW,GADE,SAEPG,EAAS,CAAEjB,KAAKyB,IAAcH,SAFvB,OAGbR,GAAW,GAHE,2CAAH,uDAQZ,OACE,uBAAMY,SAAUb,GACd,uBAASc,YAAY,QAArB,qBACA,uBACEC,SAAUT,EACVH,KAAMA,EACNa,OAAO,WACPC,kBAAgB,EAChBC,aAAa,OAEb,uBAAKC,MAAO,CAAEC,eAAgB,SAC3BrC,EAA+BsC,MAAM,EAAG,GAAGC,KAAI,SAACC,EAAMC,GAAP,OAC9C,uBAAKC,KAAM,GACT,yBAAKzC,IAAKwC,EAAIE,WAAYC,UAAU,OACjCC,YAASL,SAKlB,2BACE,uBAAQpC,KAAK,UAAU0C,SAAS,UAAhC,UAGA,yBAAKF,UAAU,QACf,uBAAQxC,KAAK,UAAU2C,QAASjC,GAAhC,cASKH","file":"static/js/50.1a01eb7f.chunk.js","sourcesContent":["import { FORM_ELEMENT_TYPES } from 'web/src/constants/formFields.constant';\r\n\r\nexport const PREPSolutionRequiredFormFields = [\r\n  {\r\n    key: 'container',\r\n    kwargs: {\r\n      placeholder: 'Select',\r\n    },\r\n    type: FORM_ELEMENT_TYPES.SELECT,\r\n    others: {\r\n      selectOptions: ['FLC', 'FSC', 'Crate', 'PP Box'],\r\n    },\r\n  },\r\n  {\r\n    key: 'part_orientation',\r\n    kwargs: {\r\n      placeholder: 'Part Orientation',\r\n    },\r\n    type: FORM_ELEMENT_TYPES.INPUT,\r\n    customLabel: 'Part Orientation',\r\n  },\r\n  {\r\n    key: 'parts',\r\n    kwargs: {\r\n      placeholder: 'Parts/PM',\r\n    },\r\n    type: FORM_ELEMENT_TYPES.INPUT,\r\n    customLabel: 'Parts/PM',\r\n  },\r\n  {\r\n    key: 'status',\r\n    kwargs: {\r\n      placeholder: 'Select',\r\n    },\r\n    type: FORM_ELEMENT_TYPES.SELECT,\r\n    others: {\r\n      selectOptions: ['TP Shared', 'CP Shared', 'TP Approved',\r\n        'CP Approved','Trials Done','Trials Approved'],\r\n    },\r\n  },\r\n]\r\n","import React, { useState } from 'react';\r\nimport { Form, Col, Row, Button, Divider, Spin} from 'antd';\r\nimport formItem from 'hocs/formItem.hoc';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { ADD_PFEP_DATA } from 'common/actions';\r\nimport { PREPSolutionRequiredFormFields } from 'common/formFields/PFEP/PFEPSolutionRequired.formFields';\r\n\r\nexport const PFEPSolutionRequiredForm = ({ id, onCancel,onDone,onNext }) => {\r\n  const [loading,setLoading] = useState(false);\r\n  const [form] = Form.useForm();\r\n  const dispatch = useDispatch();\r\n  const state =  useSelector(e=>(e.data.pfepData))\r\n\r\n\r\n  const submit = async (data) =>{\r\n    setLoading(true)\r\n    await dispatch({ type:ADD_PFEP_DATA,data });\r\n    setLoading(false)\r\n\r\n  }\r\n\r\n\r\n  return (\r\n    <Spin spinning={loading}>\r\n      <Divider orientation='left'>Solution Required</Divider>\r\n      <Form\r\n        onFinish={submit}\r\n        form={form}\r\n        layout='vertical'\r\n        hideRequiredMark\r\n        autoComplete='off'\r\n      >\r\n        <Row style={{ justifyContent: 'left' }}>\r\n          {PREPSolutionRequiredFormFields.slice(0, 4).map((item, idx) => (\r\n            <Col span={6}>\r\n              <div key={idx.toString()} className='p-2'>\r\n                {formItem(item)}\r\n              </div>\r\n            </Col>\r\n          ))}\r\n        </Row>\r\n        <Row>\r\n          <Button type='primary' htmlType='submit'>\r\n            Submit\r\n          </Button>\r\n          <div className='p-2' />\r\n          <Button type='primary' onClick={onDone}>\r\n            Cancel\r\n          </Button>\r\n        </Row>\r\n      </Form>\r\n    </Spin>\r\n  );\r\n};\r\n\r\nexport default PFEPSolutionRequiredForm;\r\n\r\n"],"sourceRoot":""}