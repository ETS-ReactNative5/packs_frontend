{"version":3,"sources":["screens/employee/GRNStuff/PrintBarcodes.js"],"names":["PrintBarcodes","id","useParams","gridValue","useState","barcodes","setBarcodes","useEffect","getBarcodes","pk","grid","then","response","error","className","map","b","index","key","singlePageData","undefined","style","textAlign","src","image","alt","srcSet","label","lname","renderBarcodeGrid","renderBarcodePage"],"mappings":"+KAmEeA,UA9DO,WACpB,IAAOC,EAAMC,cAAND,GACAE,EAAaD,cAAbC,UACP,EAAgCC,mBAAS,MAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KACAC,qBAAU,WACRC,aAAY,CAACC,GAAIR,EAAIS,KAAMP,IAAYQ,MAAK,SAACC,GAC3CN,EAAYM,EAASC,YAGtB,IAkDH,OAAO,yBAAKC,UAAU,kBAZI,WACxB,GAAiB,OAAbT,EACF,OAAOA,EAASU,KAAI,SAACC,EAAGC,GACtB,OACE,yBAAKH,UAAU,OAAOI,IAAKD,GAxCT,SAACE,GAEzB,QAAuBC,IAAnBD,EACF,OAAOA,EAAeJ,KAAI,SAACC,EAAGC,GAC5B,OACE,yBAAKH,UAAU,WAAWI,IAAKD,GAC7B,yBAAKH,UAAS,mBAAcX,IAC1B,0BAAMkB,MAAO,CAACC,UAAW,WACvB,6BADF,8BAGE,6BACA,yBAAKR,UAAU,OACb,yBAAKS,IAAG,gCAA2BP,EAAEQ,OAASC,IAAI,GAAGC,OAAO,MAE7DV,EAAEW,MAPL,IAOY,6BACTX,EAAEY,MAAQZ,EAAEY,MAAQ,UAGzB,yBAAKd,UAAS,mBAAcX,IAC1B,0BAAMkB,MAAO,CAACC,UAAW,WACvB,6BADF,8BAGE,6BACA,yBAAKR,UAAU,OACb,yBAAKS,IAAG,gCAA2BP,EAAEQ,OAASC,IAAI,GAAGC,OAAO,MAE7DV,EAAEW,MAPL,IAOY,6BACTX,EAAEY,MAAQZ,EAAEY,MAAQ,cAcxBC,CAAkBb,OAOWc","file":"static/js/76.8356d282.chunk.js","sourcesContent":["import React, {useEffect, useState} from 'react';\r\nimport {getBarcodes} from 'common/api/auth';\r\nimport {useParams} from '@reach/router';\r\nimport './PrintBarcodes.css';\r\nconst varnew = 10;\r\nconst PrintBarcodes = () => {\r\n  const {id} = useParams();\r\n  const {gridValue} = useParams();\r\n  const [barcodes, setBarcodes] = useState(null);\r\n  useEffect(() => {\r\n    getBarcodes({pk: id, grid: gridValue}).then((response) => {\r\n      setBarcodes(response.error);\r\n      console.log('response is', response);\r\n    });\r\n  }, []);\r\n\r\n  const renderBarcodeGrid = (singlePageData) => {\r\n    console.log('singlePage data is ', singlePageData);\r\n    if (singlePageData !== undefined) {\r\n      return singlePageData.map((b, index) => {\r\n        return (\r\n          <div className=\"grid-row\" key={index}>\r\n            <div className={`grid-col-${gridValue}`}>\r\n              <span style={{textAlign: 'center'}}>\r\n                <br />\r\n                Yantraksh Logistics Pvt Ltd\r\n                <br />\r\n                <div className=\"box\">\r\n                  <img src={`data:image/png;base64,${b.image}`} alt=\"\" srcSet=\"\" />\r\n                </div>\r\n                {b.label} <br />\r\n                {b.lname ? b.lname : '_____'}\r\n              </span>\r\n            </div>\r\n            <div className={`grid-col-${gridValue}`}>\r\n              <span style={{textAlign: 'center'}}>\r\n                <br />\r\n                Yantraksh Logistics Pvt Ltd\r\n                <br />\r\n                <div className=\"box\">\r\n                  <img src={`data:image/png;base64,${b.image}`} alt=\"\" srcSet=\"\" />\r\n                </div>\r\n                {b.label} <br />\r\n                {b.lname ? b.lname : '_____'}\r\n              </span>\r\n            </div>\r\n          </div>\r\n        );\r\n      });\r\n    }\r\n  };\r\n\r\n  const renderBarcodePage = () => {\r\n    if (barcodes !== null) {\r\n      return barcodes.map((b, index) => {\r\n        return (\r\n          <div className=\"page\" key={index}>\r\n            {renderBarcodeGrid(b)}\r\n          </div>\r\n        );\r\n      });\r\n    }\r\n  };\r\n\r\n  return <div className=\"grid-container\">{renderBarcodePage()}</div>;\r\n};\r\n\r\nexport default PrintBarcodes;\r\n"],"sourceRoot":""}