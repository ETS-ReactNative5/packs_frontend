{"version":3,"sources":["../../common/formFields/PFEP/PFEPBasicDetails.formFields.js","forms/PFEP/PFEPBasicDetails.form.js"],"names":["PREPBasicDetailsFormFields","key","type","FORM_ELEMENT_TYPES","DATE","others","kwargs","placeholder","INPUT","customLabel","PFEPBasicDetailsForm","id","onCancel","lead","onDone","onNext","useState","loading","setLoading","useForm","form","dispatch","useDispatch","useSelector","e","data","pfepData","useEffect","CLEAN_PFEP_DATA","submit","a","ADD_PFEP_DATA","lead_no","spinning","onFinish","layout","hideRequiredMark","autoComplete","style","justifyContent","slice","map","item","idx","span","toString","className","formItem","justify","htmlType","disabled","onClick","fontSize"],"mappings":"6FAAA,+CAEaA,EAA6B,CACxC,CACEC,IAAK,OACLC,KAAMC,IAAmBC,KACzBC,OAAQ,MAEV,CACEJ,IAAK,iBACLK,OAAQ,CACNC,YAAa,uBAEfL,KAAMC,IAAmBK,MACzBC,YAAa,uBAEf,CACER,IAAK,cACLK,OAAQ,CACNC,YAAa,eAEfL,KAAMC,IAAmBK,MACzBH,OAAQ,MAEV,CACEJ,IAAK,QACLK,OAAQ,CACNC,YAAa,SAEfL,KAAMC,IAAmBK,MACzBH,OAAQ,KACRI,YAAa,SAEf,CACER,IAAK,aACLK,OAAQ,CACNC,YAAa,iBACbL,KAAK,UAEPA,KAAMC,IAAmBK,MACzBH,OAAQ,KACRI,YAAa,oB,6RCjCJC,EAAuB,SAAC,GAAyC,EAAvCC,GAAuC,EAAnCC,SAAoC,IAA3BC,EAA0B,EAA1BA,KAAMC,EAAoB,EAApBA,OAAOC,EAAa,EAAbA,OAAa,EAC/CC,oBAAS,GADsC,mBACrEC,EADqE,KAC7DC,EAD6D,OAE7D,IAAKC,UAAbC,EAFqE,oBAGtEC,EAAWC,cACFC,aAAY,SAAAC,GAAC,OAAGA,EAAEC,KAAKC,YAEtCC,qBAAU,WACRN,EAAS,CAAEnB,KAAK0B,QAEhB,CAACf,IAEH,IAAMgB,EAAM,uCAAG,WAAOJ,GAAP,SAAAK,EAAA,6DAEbZ,GAAW,GAFE,SAGPG,EAAS,CAAEnB,KAAK6B,IAAcN,KAAK,2BAAKA,GAAN,IAAWO,QAAQnB,MAH9C,OAIbK,GAAW,GACXH,IALa,2CAAH,sDAQZ,OACE,uBAAMkB,SAAUhB,GACd,uBACEiB,SAAUL,EACVT,KAAMA,EACNe,OAAO,WACPC,kBAAgB,EAChBC,aAAa,OAEb,uBAAKC,MAAO,CAAEC,eAAgB,SAC3BvC,IAA2BwC,MAAM,EAAG,GAAGC,KAAI,SAACC,EAAMC,GAAP,OAC1C,uBAAKC,KAAM,GACT,yBAAK3C,IAAK0C,EAAIE,WAAYC,UAAU,OACjCC,YAASL,SAKlB,uBAAKM,QAAQ,iBACX,yBAAKF,UAAU,OACb,uBAAQ5C,KAAK,UAAU+C,SAAS,SAASC,UAAQ,GAAjD,UAGA,yBAAKJ,UAAU,QACf,uBAAQ5C,KAAK,UAAUiD,QAASrC,GAAhC,WAIF,uBAAQZ,KAAK,OAAO+C,SAAS,UAC3B,kBAAC,IAAD,CAAoBX,MAAO,CAAEc,SAAS,WAQnC1C","file":"static/js/44.9f6b9ce9.chunk.js","sourcesContent":["import { FORM_ELEMENT_TYPES } from 'web/src/constants/formFields.constant';\n\nexport const PREPBasicDetailsFormFields = [\n  {\n    key: 'date',\n    type: FORM_ELEMENT_TYPES.DATE,\n    others: null,\n  },\n  {\n    key: 'contact_person',\n    kwargs: {\n      placeholder: 'Contact Person Name',\n    },\n    type: FORM_ELEMENT_TYPES.INPUT,\n    customLabel: 'Contact Person Name',\n  },\n  {\n    key: 'designation',\n    kwargs: {\n      placeholder: 'Designation',\n    },\n    type: FORM_ELEMENT_TYPES.INPUT,\n    others: null,\n  },\n  {\n    key: 'email',\n    kwargs: {\n      placeholder: 'Email',\n    },\n    type: FORM_ELEMENT_TYPES.INPUT,\n    others: null,\n    customLabel: 'Email',\n  },\n  {\n    key: 'contact_no',\n    kwargs: {\n      placeholder: 'Contact Number',\n      type:'number',\n    },\n    type: FORM_ELEMENT_TYPES.INPUT,\n    others: null,\n    customLabel: 'Contact Number',\n  },\n]\n","import React, { useEffect, useState } from 'react';\nimport { Form, Col, Row, Button, Divider, Spin } from 'antd';\nimport { ArrowRightOutlined } from '@ant-design/icons'\nimport { PREPBasicDetailsFormFields } from 'common/formFields/PFEP/PFEPBasicDetails.formFields';\nimport formItem from 'hocs/formItem.hoc';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { ADD_PFEP_DATA, CLEAN_PFEP_DATA } from 'common/actions';\n\nexport const PFEPBasicDetailsForm = ({ id, onCancel,lead ,onDone,onNext }) => {\n  const [loading,setLoading] = useState(false);\n  const [form] = Form.useForm();\n  const dispatch = useDispatch();\n  const state =  useSelector(e=>(e.data.pfepData))\n\n  useEffect(()=>{\n    dispatch({ type:CLEAN_PFEP_DATA });\n    console.log('Cleared : ' ,state)\n  },[lead])\n\n  const submit = async (data) =>{\n    console.log(data);\n    setLoading(true)\n    await dispatch({ type:ADD_PFEP_DATA,data:{ ...data,lead_no:lead } });\n    setLoading(false)\n    onNext();\n  }\n\n  return (\n    <Spin spinning={loading}>\n      <Form\n        onFinish={submit}\n        form={form}\n        layout='vertical'\n        hideRequiredMark\n        autoComplete='off'\n      >\n        <Row style={{ justifyContent: 'left' }}>\n          {PREPBasicDetailsFormFields.slice(0, 4).map((item, idx) => (\n            <Col span={6}>\n              <div key={idx.toString()} className='p-2'>\n                {formItem(item)}\n              </div>\n            </Col>\n          ))}\n        </Row>\n        <Row justify='space-between'>\n          <div className='row'>\n            <Button type='primary' htmlType='submit' disabled>\n              Submit\n            </Button>\n            <div className='p-2' />\n            <Button type='primary' onClick={onDone}>\n              Cancel\n            </Button>\n          </div>\n          <Button type='link' htmlType='submit'>\n            <ArrowRightOutlined style={{ fontSize:30 }}  />\n          </Button>\n        </Row>\n      </Form>\n    </Spin>\n  );\n};\n\nexport default PFEPBasicDetailsForm;\n\n"],"sourceRoot":""}