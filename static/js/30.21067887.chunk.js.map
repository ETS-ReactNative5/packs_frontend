{"version":3,"sources":["components/Report.js"],"names":["Report","useState","reqData","setReqData","useEffect","a","retrieveProducts","data","fetchProducts","toolbar","width","report","dataSource","slice","rows","uniqueName","columns","measures","aggregation"],"mappings":"yLAoEeA,UA7DA,WAAO,IAAD,EACWC,mBAAS,MADpB,mBACZC,EADY,KACHC,EADG,KAenB,OAZAC,qBAAU,YACW,uCAAG,8BAAAC,EAAA,sEACCC,eADD,iBACbC,EADa,EACbA,OAGLJ,EAAWI,GAJO,2CAAH,qDAQnBC,KACC,IAEIN,EAoBL,kBAAC,QAAD,CAEEO,SAAS,EACTC,MAAM,OACNC,OAAQ,CACNC,WAAY,CACVL,KAAML,GAERW,MAAO,CACLC,KAAM,CAAC,CAACC,WAAY,cAAe,CAACA,WAAY,eAChDC,QAAS,CAAC,CAACD,WAAY,aACvBE,SAAU,CACR,CACEF,WAAY,eACZG,YAAa,YASzB","file":"static/js/30.21067887.chunk.js","sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport * as FlexmonsterReact from 'react-flexmonster/hooks';\r\nimport {retrieveProducts} from 'common/api/auth';\r\nimport storage from 'redux-persist/lib/storage';\r\n\r\nimport 'flexmonster/flexmonster.css';\r\n\r\nconst Report = () => {\r\n  const [reqData, setReqData] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchProducts = async () => {\r\n      const {data} = await retrieveProducts();\r\n      console.log(typeof data);\r\n      if (data) {\r\n        setReqData(data);\r\n        console.log(data);\r\n      }\r\n    };\r\n    fetchProducts();\r\n  }, []);\r\n\r\n  return reqData ? (\r\n    // <WebDataRocksReact.Pivot\r\n    //   toolbar={true}\r\n    //   report={{\r\n    //     dataSource: {\r\n    //       data: reqData,\r\n    //     },\r\n    //   slice: {\r\n    //     rows: [\r\n    //       {\r\n    //         uniqueName: 'short_code',\r\n    //       },\r\n    //     ],\r\n    //     columns: [\r\n    //       {\r\n    //         uniqueName: 'priceperunit',\r\n    //       },\r\n    //     ],\r\n    //   },\r\n    // }}\r\n    <FlexmonsterReact.Pivot\r\n      // ref={ref}\r\n      toolbar={true}\r\n      width=\"100%\"\r\n      report={{\r\n        dataSource: {\r\n          data: reqData,\r\n        },\r\n        slice: {\r\n          rows: [{uniqueName: 'short_code'}, {uniqueName: '[Measures]'}],\r\n          columns: [{uniqueName: 'Category'}],\r\n          measures: [\r\n            {\r\n              uniqueName: 'priceperunit',\r\n              aggregation: 'sum',\r\n            },\r\n          ],\r\n        },\r\n      }}\r\n      // reportcomplete={onReportComplete}\r\n    />\r\n  ) : // report=\"https://cdn.webdatarocks.com/reports/report.json\"\r\n  // />\r\n  null;\r\n};\r\n\r\nexport default Report;\r\n"],"sourceRoot":""}