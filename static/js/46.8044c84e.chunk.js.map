{"version":3,"sources":["constants/formFields.constant.js","hocs/formItem.hoc.js","../../common/formFields/PFEP/PFEPSolutionRequired.formFields.js","../../common/formFields/PFEP/PFEPStatus.formFields.js","forms/PFEP/PFEPStatus.form.js"],"names":["FORM_ELEMENT_TYPES","INPUT","MULTIPLE_CHECKBOX","INPUT_NUMBER","PASSWORD","TEXTAREA","MARKDOWN","SELECT","CAPTCHA","MONTH_PICKER","FILE_DRAG_DROP","RANGE_PICKER","RADIO","SWITCH","HIDDEN","DATE","CASCADER","Option","CheckboxGroup","Group","props","name","action","file","Promise","resolve","reject","setTimeout","reader","FileReader","addEventListener","result","readAsDataURL","FormItem","key","rules","kwargs","type","others","customLabel","noLabel","formOptions","Item","label","charAt","toUpperCase","slice","size","Dragger","style","maxHeight","width","className","p1","p2","shouldUpdate","selectOptions","map","item","index","toString","search","customTitle","value","fontSize","fontWeight","dataKeys","flexWrap","i","marginLeft","marginRight","radioOptions","onChange","date","checkOptions","valuePropName","PREPSolutionRequiredFormFields","defaultValue","noStyle","placeholder","PFEPStatusFormFields","PFEPStatusForm","id","onCancel","active","onDone","useState","loading","setLoading","dropdownVisible","setDropdownVisible","useForm","form","dispatch","useDispatch","state","useSelector","e","data","pfepData","submit","a","ADD_PFEP_DATA","editPFEP","error","notification","warning","message","description","createPFEP","useEffect","STOP_STEP_LOADING","menu","onClick","CloseOutlined","idx","formItem","spinning","orientation","onFinish","initialValues","layout","autoComplete","justifyContent","span","trigger","overlay","onVisibleChange","visible","preventDefault","DownOutlined","justify","htmlType"],"mappings":"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","file":"static/js/46.8044c84e.chunk.js","sourcesContent":["export const FORM_ELEMENT_TYPES = {\r\n  INPUT: 'input',\r\n  MULTIPLE_CHECKBOX: 'MULTIPLE_CHECKBOX',\r\n  INPUT_NUMBER: 'input-number',\r\n  PASSWORD: 'password',\r\n  TEXTAREA: 'textarea',\r\n  MARKDOWN: 'markdown',\r\n  SELECT: 'select',\r\n  CAPTCHA: 'captcha',\r\n  MONTH_PICKER: 'month-picker',\r\n  FILE_DRAG_DROP: 'file-drag-drop',\r\n  RANGE_PICKER: 'range-picker',\r\n  RADIO: 'radio',\r\n  SWITCH: 'switch',\r\n  HIDDEN: 'hidden',\r\n  DATE: 'date',\r\n  CASCADER: 'cascader',\r\n};\r\n\r\nexport const SUBMIT_FORM = 'SUBMIT_FORM';\r\n\r\nexport const CAPTCHA = {\r\n  type: FORM_ELEMENT_TYPES.CAPTCHA,\r\n  name: 'captcha',\r\n  label: 'Captcha',\r\n  rules: [\r\n    {\r\n      required: process.env.NODE_ENV === 'production',\r\n      message: 'Please solve the captcha',\r\n    },\r\n  ],\r\n};\r\n","import React from 'react';\r\nimport {\r\n  Form,\r\n  Input,\r\n  Upload,\r\n  Select,\r\n  Radio,\r\n  DatePicker,\r\n  Checkbox,\r\n  InputNumber,\r\n  message,\r\n  Switch,\r\n} from 'antd';\r\nimport { Icon } from '@ant-design/compatible';\r\nimport { FORM_ELEMENT_TYPES } from 'constants/formFields.constant';\r\n\r\nconst { Option } = Select;\r\nconst CheckboxGroup = Checkbox.Group;\r\n\r\n// const handleUplaod = (file) => {\r\n//   return new Promise(async (resolve, reject) => {\r\n//     const fileName = `nameThatIwant.type`;\r\n//     const url = await S3Fetcher.getPresignedUrl(fileName);\r\n//     resolve(url);\r\n//   });\r\n\r\nconst onCustomRequest = (file) => {\r\n  return new Promise((resolve, reject) => {\r\n    const ajaxResponseWasFine = true;\r\n\r\n    setTimeout(() => {\r\n      if (ajaxResponseWasFine) {\r\n        const reader = new FileReader();\r\n\r\n        reader.addEventListener(\r\n          'load',\r\n          () => {\r\n            resolve(reader.result);\r\n          },\r\n          false,\r\n        );\r\n\r\n        if (file) {\r\n          reader.readAsDataURL(file);\r\n        }\r\n      } else {\r\n        reject('error');\r\n      }\r\n    }, 1000);\r\n  });\r\n};\r\n\r\nconst props = {\r\n  name: 'file',\r\n  action: onCustomRequest,\r\n  // onChange(info) {\r\n  //   const {status} = info.file;\r\n  //   if (status !== 'uploading') {\r\n  //     console.log(info.file, info.fileList);\r\n  //   }\r\n  //   if (status === 'done') {\r\n  //     message.success(`${info.file.name} file uploaded successfully.`);\r\n  //   } else if (status === 'error') {\r\n  //     message.error(`${info.file.name} file upload failed.`);\r\n  //   }\r\n  // },\r\n};\r\n\r\nconst FormItem = ({ key, rules, kwargs, type, others, customLabel, noLabel }) => {\r\n  let formOptions = {};\r\n  if (others) {\r\n    if (others.formOptions) {\r\n      formOptions = others.formOptions;\r\n    }\r\n  }\r\n\r\n  switch (type) {\r\n    case FORM_ELEMENT_TYPES.INPUT: {\r\n      return (\r\n        <Form.Item\r\n          key={key}\r\n          label={noLabel ? null : customLabel || key.charAt(0).toUpperCase() + key.slice(1)}\r\n          name={key}\r\n          rules={rules}\r\n          {...formOptions}>\r\n          <Input {...kwargs} size='middle' />\r\n        </Form.Item>\r\n      );\r\n    }\r\n\r\n    case FORM_ELEMENT_TYPES.INPUT_NUMBER:\r\n      return (\r\n        <Form.Item\r\n          key={key}\r\n          label={noLabel ? null : customLabel || key.charAt(0).toUpperCase() + key.slice(1)}\r\n          name={key}\r\n          rules={rules}\r\n          {...formOptions}>\r\n          <InputNumber {...kwargs} size='middle' />\r\n        </Form.Item>\r\n      );\r\n\r\n    case FORM_ELEMENT_TYPES.FILE_DRAG_DROP:\r\n      return (\r\n        <Form.Item\r\n          key={key}\r\n          label={noLabel ? null : customLabel || key.charAt(0).toUpperCase() + key.slice(1)}\r\n          name={key}\r\n          rules={rules}\r\n          {...formOptions}>\r\n          <Upload.Dragger {...kwargs} {...props} style={{ maxHeight: '75px', width: '150px' }}>\r\n            <p className='ant-upload-drag-icon'>\r\n              <Icon type='inbox' />\r\n            </p>\r\n            {others ? (\r\n              <>\r\n                <p className='ant-upload-text p-1'>{others.p1}</p>\r\n                <p className='ant-upload-hint p-1'>{others.p2}</p>\r\n              </>\r\n            ) : null}\r\n          </Upload.Dragger>\r\n        </Form.Item>\r\n      );\r\n\r\n    case FORM_ELEMENT_TYPES.SELECT:\r\n      return (\r\n        <Form.Item\r\n          shouldUpdate\r\n          key={key}\r\n          label={noLabel ? null : customLabel || key.charAt(0).toUpperCase() + key.slice(1)}\r\n          name={key}\r\n          rules={rules}\r\n          {...formOptions}>\r\n          <Select {...kwargs}>\r\n            {others.selectOptions.map((item, index) => (\r\n              <Option\r\n                key={index.toString()}\r\n                search={item[others.customTitle]}\r\n                value={item.value || item[others.key] || item}>\r\n                {others.customTitle ? (\r\n                  <text style={{ fontSize: 13, fontWeight: 'bold' }}>\r\n                    {item[others.customTitle]}\r\n                  </text>\r\n                ) : (\r\n                  item.label || item[others.key] || item\r\n                )}\r\n                {others.dataKeys ? (\r\n                  <div className='row' style={{ flexWrap: 'wrap' }}>\r\n                    {others.dataKeys.map((i) => (\r\n                      <text style={{ fontSize: 11, marginLeft: 5, marginRight: 5 }}>{item[i]}</text>\r\n                    ))}\r\n                  </div>\r\n                ) : null}\r\n              </Option>\r\n            ))}\r\n          </Select>\r\n        </Form.Item>\r\n      );\r\n\r\n    case FORM_ELEMENT_TYPES.RADIO:\r\n      return (\r\n        <Form.Item\r\n          key={key}\r\n          label={noLabel ? null : customLabel || key.charAt(0).toUpperCase() + key.slice(1)}\r\n          name={key}\r\n          rules={rules}\r\n          {...formOptions}>\r\n          <Radio.Group value='Ggg'>\r\n            {others.radioOptions.map((item) => (\r\n              <Radio key={item.value} value={item.value}>\r\n                {item.label}\r\n              </Radio>\r\n            ))}\r\n          </Radio.Group>\r\n        </Form.Item>\r\n      );\r\n\r\n    case FORM_ELEMENT_TYPES.DATE:\r\n      return (\r\n        <Form.Item\r\n          key={key}\r\n          {...formOptions}\r\n          label={noLabel ? null : customLabel || key.charAt(0).toUpperCase() + key.slice(1)}\r\n          name={key}\r\n          rules={rules}>\r\n          <DatePicker onChange={(date) => console.log(date)} />\r\n        </Form.Item>\r\n      );\r\n    case FORM_ELEMENT_TYPES.MULTIPLE_CHECKBOX:\r\n      return (\r\n        <Form.Item\r\n          key={key}\r\n          label={noLabel ? null : customLabel || key.charAt(0).toUpperCase() + key.slice(1)}\r\n          name={key}\r\n          rules={rules}\r\n          {...formOptions}>\r\n          <CheckboxGroup onChange={others.onChange}>\r\n            {others.checkOptions.map((i) => (\r\n              <Checkbox value={i.value}>{i.label}</Checkbox>\r\n            ))}\r\n          </CheckboxGroup>\r\n        </Form.Item>\r\n      );\r\n    case FORM_ELEMENT_TYPES.SWITCH:\r\n      return (\r\n        <Form.Item\r\n          key={key}\r\n          valuePropName='checked'\r\n          {...formOptions}\r\n          label={noLabel ? null : customLabel || key.charAt(0).toUpperCase() + key.slice(1)}\r\n          name={key}\r\n          rules={rules}>\r\n          <Switch {...kwargs} />\r\n        </Form.Item>\r\n      );\r\n    default:\r\n      return null;\r\n  }\r\n};\r\n\r\nexport default FormItem;\r\n","import { FORM_ELEMENT_TYPES } from 'web/src/constants/formFields.constant';\r\n\r\nexport const PREPSolutionRequiredFormFields = [\r\n  {\r\n    key: 'solution_flc',\r\n    type: FORM_ELEMENT_TYPES.SWITCH,\r\n    others: {\r\n      defaultValue:false,\r\n      formOptions:{ noStyle:true }\r\n    },\r\n    customLabel: 'FLC',\r\n  },\r\n  {\r\n    key: 'solution_fsc',\r\n    type: FORM_ELEMENT_TYPES.SWITCH,\r\n    others: {\r\n      defaultValue:false,\r\n      formOptions:{ noStyle:true }\r\n    },\r\n    customLabel: 'FSC',\r\n  },\r\n  {\r\n    key: 'solution_crate',\r\n    type: FORM_ELEMENT_TYPES.SWITCH,\r\n    others: {\r\n      defaultValue:false,\r\n      formOptions:{ noStyle:true }\r\n    },\r\n    customLabel: 'Crate',\r\n  },\r\n  {\r\n    key: 'solution_ppbox',\r\n    type: FORM_ELEMENT_TYPES.SWITCH,\r\n    others: {\r\n      defaultValue:false,\r\n      formOptions:{ noStyle:true }\r\n    },\r\n    customLabel: 'PP Box',\r\n  },\r\n  {\r\n    key: 'solution_pp',\r\n    type: FORM_ELEMENT_TYPES.SWITCH,\r\n    others: {\r\n      defaultValue:false,\r\n      formOptions:{ noStyle:true }\r\n    },\r\n    customLabel: 'Plastic Pallet',\r\n  },\r\n  {\r\n    key: 'solution_palletized_crate',\r\n    type: FORM_ELEMENT_TYPES.SWITCH,\r\n    others: {\r\n      defaultValue:false,\r\n      formOptions:{ noStyle:true }\r\n    },\r\n    customLabel: 'Palletized Crate',\r\n  },\r\n  {\r\n    key: 'solution_palletized_box',\r\n    type: FORM_ELEMENT_TYPES.SWITCH,\r\n    others: {\r\n      defaultValue:false,\r\n      formOptions:{ noStyle:true }\r\n    },\r\n    customLabel: 'Palletized Box Solution',\r\n  },\r\n  {\r\n    key: 'solution_wp',\r\n    others: {\r\n      defaultValue:false,\r\n      formOptions:{ noStyle:true }\r\n    },\r\n    type: FORM_ELEMENT_TYPES.SWITCH,\r\n    customLabel: 'Wooden Pallet',\r\n  },\r\n  {\r\n    key: 'p2p_contact',\r\n    type: FORM_ELEMENT_TYPES.INPUT,\r\n    customLabel: 'Part to Part Contact Permissible?',\r\n    kwargs: {\r\n      placeholder: 'Part to Part Contact Permissible',\r\n    },\r\n    others: {\r\n      formOptions:{ noStyle:true }\r\n    },\r\n  },\r\n  {\r\n    key: 'solution_stacking_nesting',\r\n    type: FORM_ELEMENT_TYPES.INPUT,\r\n    customLabel: 'Stacking or Nesting of parts',\r\n    kwargs: {\r\n      placeholder: 'Stacking or Nesting of parts',\r\n    },\r\n    others: {\r\n      formOptions:{ noStyle:true }\r\n    } },\r\n  {\r\n    key: 'mul_parts_single_pocket',\r\n    type: FORM_ELEMENT_TYPES.INPUT,\r\n    kwargs: {\r\n      placeholder: 'Multiple Parts in Single Packet',\r\n    },\r\n    customLabel: 'Multiple Parts in Single Packet',\r\n    others: {\r\n      formOptions:{ noStyle:true }\r\n    },\r\n  },\r\n  {\r\n    key: 'min_max_margin',\r\n    kwargs: {\r\n      placeholder: 'Min/Max Margin from Wall',\r\n    },\r\n    others: {\r\n      formOptions:{ noStyle:true }\r\n    },\r\n    type: FORM_ELEMENT_TYPES.INPUT,\r\n    customLabel: 'Min/Max Margin from Wall',\r\n  },\r\n  {\r\n    key: 'other_spec',\r\n    kwargs: {\r\n      placeholder: 'Other Specification',\r\n    },\r\n    others: {\r\n      formOptions:{ noStyle:true }\r\n    },\r\n    type: FORM_ELEMENT_TYPES.INPUT,\r\n    customLabel: 'Other Specification',\r\n  },\r\n  {\r\n    key: 'parts_orientation',\r\n    kwargs: {\r\n      placeholder: 'Part Orientation',\r\n    },\r\n    others: {\r\n      formOptions:{ noStyle:true }\r\n    },\r\n    type: FORM_ELEMENT_TYPES.INPUT,\r\n    customLabel: 'Part Orientation',\r\n  },\r\n  {\r\n    key: 'parts_pm',\r\n    kwargs: {\r\n      placeholder: 'Parts/PM',\r\n    },\r\n    others: {\r\n      formOptions:{ noStyle:true }\r\n    },  type: FORM_ELEMENT_TYPES.INPUT,\r\n    customLabel: 'Parts/PM',\r\n  },\r\n]\r\n","import { FORM_ELEMENT_TYPES } from 'web/src/constants/formFields.constant';\r\n\r\n// {\r\n//     key: 'status',\r\n//     kwargs: {\r\n//       placeholder: 'Select',\r\n//     },\r\n//     type: FORM_ELEMENT_TYPES.SELECT,\r\n//     others: {\r\n//       selectOptions: [\r\n//       'TP Shared', 'CP Shared', 'TP Approved',\r\n//         'CP Approved','Trials Done','Trials Approved','ESA Signed','Flow started',\r\n//         'On Hold' , 'PFEP Dropped' ,'Not Qualified'\r\n//       ],\r\n//     },\r\n//   },\r\n\r\nexport const PFEPStatusFormFields = [\r\n  {\r\n    key: 'tp_shared',\r\n    type: FORM_ELEMENT_TYPES.SWITCH,\r\n    others: {\r\n      defaultValue:false,\r\n      formOptions:{ noStyle:true }\r\n    },\r\n    customLabel: 'TP Shared',\r\n  },\r\n  {\r\n    key: 'cp_shared',\r\n    type: FORM_ELEMENT_TYPES.SWITCH,\r\n    others: {\r\n      defaultValue:false,\r\n      formOptions:{ noStyle:true }\r\n    },\r\n    customLabel: 'CP Shared',\r\n  },\r\n  {\r\n    key: 'tp_approved',\r\n    type: FORM_ELEMENT_TYPES.SWITCH,\r\n    others: {\r\n      defaultValue:false,\r\n      formOptions:{ noStyle:true }\r\n    },\r\n    customLabel: 'TP Approved',\r\n  },\r\n  {\r\n    key: 'cp_approved',\r\n    type: FORM_ELEMENT_TYPES.SWITCH,\r\n    others: {\r\n      defaultValue:false,\r\n      formOptions:{ noStyle:true }\r\n    },\r\n    customLabel: 'CP Approved',\r\n  },\r\n  {\r\n    key: 'trials_done',\r\n    type: FORM_ELEMENT_TYPES.SWITCH,\r\n    others: {\r\n      defaultValue:false,\r\n      formOptions:{ noStyle:true }\r\n    },\r\n    customLabel: 'Trials Done',\r\n  },\r\n\r\n  {\r\n    key: 'trials_approved',\r\n    type: FORM_ELEMENT_TYPES.SWITCH,\r\n    others: {\r\n      defaultValue:false,\r\n      formOptions:{ noStyle:true }\r\n    },\r\n    customLabel: 'Trials Approved',\r\n  },\r\n  {\r\n    key: 'esa_signed',\r\n    type: FORM_ELEMENT_TYPES.SWITCH,\r\n    others: {\r\n      defaultValue:false,\r\n      formOptions:{ noStyle:true }\r\n    },\r\n    customLabel: 'ESA Signed',\r\n  },\r\n\r\n  {\r\n    key: 'flow_started',\r\n    type: FORM_ELEMENT_TYPES.SWITCH,\r\n    customLabel: 'Flow started',\r\n    others: {\r\n      defaultValue:false,\r\n      formOptions:{ noStyle:true }\r\n    },\r\n  },\r\n  {\r\n    key: 'on_hold',\r\n    type: FORM_ELEMENT_TYPES.SWITCH,\r\n    customLabel: 'On Hold',\r\n    others: {\r\n      formOptions:{ noStyle:true }\r\n    } },\r\n  {\r\n    key: 'pfep_dropped',\r\n    type: FORM_ELEMENT_TYPES.SWITCH,\r\n    customLabel: 'PFEP Dropped',\r\n    others: {\r\n      formOptions:{ noStyle:true }\r\n    } },\r\n  {\r\n    key: 'not_qualified',\r\n    type: FORM_ELEMENT_TYPES.SWITCH,\r\n    customLabel: 'Not Qualified',\r\n    others: {\r\n      formOptions:{ noStyle:true }\r\n    } },\r\n  {\r\n    key: 'solution_remark',\r\n    kwargs: {\r\n      placeholder: 'Remark',\r\n    },\r\n    others: {\r\n      formOptions:{ noStyle:true }\r\n    },  type: FORM_ELEMENT_TYPES.INPUT,\r\n    customLabel: 'Remark',\r\n  },\r\n]\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Form, Col, Row, Button, Divider, Spin,Menu, notification, Dropdown } from 'antd';\r\nimport formItem from 'hocs/formItem.hoc';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { ADD_PFEP_DATA, STOP_STEP_LOADING } from 'common/actions';\r\nimport {\r\n   CloseOutlined,\r\n  DownOutlined,\r\n} from '@ant-design/icons';\r\nimport { createPFEP, editPFEP } from 'common/api/auth';\r\nimport { PFEPStatusFormFields } from 'common/formFields/PFEP/PFEPStatus.formFields';\r\nimport { PREPSolutionRequiredFormFields } from 'common/formFields/PFEP/PFEPSolutionRequired.formFields';\r\n\r\nconst { Item }  = Menu;\r\n\r\nexport const PFEPStatusForm = ({ id, onCancel,active,onDone }) => {\r\n  const [loading,setLoading] = useState(false);\r\n  const [dropdownVisible,setDropdownVisible] = useState(false);\r\n  const [form] = Form.useForm();\r\n  const dispatch = useDispatch();\r\n  const state =  useSelector(e=>(e.data.pfepData))\r\n\r\n\r\n  const submit = async (data) =>{\r\n    setLoading(true)\r\n    await dispatch({ type:ADD_PFEP_DATA,data });\r\n    setLoading(false)\r\n    if(active === 5){\r\n      if(id){\r\n        const { error } = await editPFEP(id,{ ...state,...data });\r\n        if (error) {\r\n          notification.warning({\r\n            message: 'Unable To Edit.',\r\n            description:\r\n            'Something went wrong PFEP editing failed.',\r\n          });\r\n          onCancel();\r\n        } else {\r\n          onDone();\r\n        }\r\n      }\r\n      else{\r\n        const { error } = await createPFEP({ ...state,...data });\r\n        if (error) {\r\n          notification.warning({\r\n            message: 'Unable To Create.',\r\n            description:\r\n            'Something went wrong PFEP creation failed.',\r\n          });\r\n          onCancel();\r\n        } else {\r\n          onDone();\r\n        }\r\n      }\r\n    }}\r\n  useEffect( ()=>{\r\n    if(active!==5){\r\n      form.submit()\r\n      dispatch({ type:STOP_STEP_LOADING })\r\n    }\r\n  },[active])\r\n  const menu = (\r\n    <Menu onClick={(e)=>{if(e.key==='close'){setDropdownVisible(false)}}}>\r\n      <Item key='close'>\r\n        <div className='row justify-between align-center'>\r\n          Close\r\n          <CloseOutlined />\r\n        </div>\r\n      </Item>\r\n      {PFEPStatusFormFields.slice(0,11).map((item, idx) => (\r\n        <Item key={idx.toString()}>\r\n          <div className='row justify-between'>\r\n            <div style={{ flexWrap:'wrap',marginRight:'5px' }}>\r\n              {item.customLabel}\r\n              {' '}\r\n            </div>\r\n            {formItem(item)}\r\n          </div>\r\n        </Item>\r\n      ))}\r\n    </Menu>\r\n  )\r\n  return (\r\n    <Spin spinning={loading}>\r\n      <Divider orientation='left'>Status</Divider>\r\n      <Form\r\n        onFinish={submit}\r\n        initialValues={state}\r\n        form={form}\r\n        layout='vertical'\r\n        // hideRequiredMark\r\n        autoComplete='off'\r\n      >\r\n        <Row style={{ justifyContent: 'left' }}>\r\n          {PFEPStatusFormFields.slice(11,12).map((item, idx) => (\r\n            <Col span={6}>\r\n              <div key={idx.toString()} className='p-2'>\r\n                {formItem(item)}\r\n              </div>\r\n            </Col>\r\n          ))} <Col span={5}>\r\n            <div className='p-2'>\r\n              <Dropdown\r\n                trigger={['click']}\r\n                overlay={menu}\r\n                onVisibleChange={(e)=>{setDropdownVisible(e)}}\r\n                visible={dropdownVisible}\r\n              >\r\n                <Button className='ant-dropdown-link' onClick={e => e.preventDefault()}>\r\n                  Select Status\r\n                  {' '}\r\n                  <DownOutlined />\r\n                </Button>\r\n              </Dropdown>\r\n            </div>\r\n            <br />\r\n            <br />\r\n            <br />\r\n          </Col>\r\n\r\n        </Row>\r\n        <Row justify='space-between'>\r\n          <div className='row'>\r\n            <Button type='primary' htmlType='submit'>\r\n              Submit\r\n            </Button>\r\n            <div className='p-2' />\r\n            <Button type='primary' onClick={onCancel}>\r\n              Cancel\r\n            </Button>\r\n          </div>\r\n        </Row>\r\n      </Form>\r\n    </Spin>\r\n  );\r\n};\r\n\r\nexport default PFEPStatusForm;\r\n\r\n"],"sourceRoot":""}