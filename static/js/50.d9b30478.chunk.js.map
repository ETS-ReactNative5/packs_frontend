{"version":3,"sources":["../../common/formFields/PFEP/PFEPSolutionRequired.formFields.js","forms/PFEP/PFEPSolutionRequired.form.js"],"names":["PREPSolutionRequiredFormFields","key","type","FORM_ELEMENT_TYPES","SWITCH","others","customLabel","kwargs","placeholder","INPUT","SELECT","selectOptions","PFEPSolutionRequiredForm","id","onCancel","onDone","onNext","useState","loading","setLoading","useForm","form","dispatch","useDispatch","submit","useSelector","e","data","pfepData","a","ADD_PFEP_DATA","createPFEP","spinning","orientation","onFinish","layout","hideRequiredMark","autoComplete","style","justifyContent","slice","map","item","idx","span","toString","className","formItem","htmlType","onClick"],"mappings":"8VAEaA,EAAiC,CAC5C,CACEC,IAAK,eACLC,KAAMC,IAAmBC,OACzBC,OAAQ,KACRC,YAAa,OAEf,CACEL,IAAK,eACLC,KAAMC,IAAmBC,OACzBC,OAAQ,KACRC,YAAa,OAEf,CACEL,IAAK,iBACLC,KAAMC,IAAmBC,OACzBC,OAAQ,KACRC,YAAa,SAEf,CACEL,IAAK,iBACLC,KAAMC,IAAmBC,OACzBC,OAAQ,KACRC,YAAa,UAEf,CACEL,IAAK,mBACLM,OAAQ,CACNC,YAAa,oBAEfN,KAAMC,IAAmBM,MACzBH,YAAa,oBAEf,CACEL,IAAK,WACLM,OAAQ,CACNC,YAAa,YAEfN,KAAMC,IAAmBM,MACzBH,YAAa,YAEf,CACEL,IAAK,SACLM,OAAQ,CACNC,YAAa,UAEfN,KAAMC,IAAmBO,OACzBL,OAAQ,CACNM,cAAe,CAAC,YAAa,YAAa,cACxC,cAAc,cAAc,sB,SC1CvBC,EAA2B,SAAC,GAAmC,EAAjCC,GAAiC,EAA7BC,SAA8B,IAArBC,EAAoB,EAApBA,OAAoB,KAAbC,OAChCC,oBAAS,IADoC,mBACnEC,EADmE,KAC3DC,EAD2D,OAE3D,IAAKC,UAAbC,EAFmE,oBAGpEC,EAAWC,cAIXC,GAHSC,aAAY,SAAAC,GAAC,OAAGA,EAAEC,KAAKC,YAG1B,uCAAG,WAAOD,GAAP,SAAAE,EAAA,6DACbV,GAAW,GADE,SAEPG,EAAS,CAAEpB,KAAK4B,IAAcH,SAFvB,cAGbR,GAAW,GAHE,SAIaY,YAAWJ,GAJxB,yDAAH,uDAOZ,OACE,uBAAMK,SAAUd,GACd,uBAASe,YAAY,QAArB,qBACA,uBACEC,SAAUV,EACVH,KAAMA,EACNc,OAAO,WACPC,kBAAgB,EAChBC,aAAa,OAEb,uBAAKC,MAAO,CAAEC,eAAgB,SAC3BvC,EAA+BwC,MAAM,EAAG,GAAGC,KAAI,SAACC,EAAMC,GAAP,OAC9C,uBAAKC,KAAM,GACT,yBAAK3C,IAAK0C,EAAIE,WAAYC,UAAU,OACjCC,YAASL,SAKlB,uBAAKJ,MAAO,CAAEC,eAAgB,SAC3BvC,EAA+BwC,MAAM,EAAG,GAAGC,KAAI,SAACC,EAAMC,GAAP,OAC9C,uBAAKC,KAAM,GACT,yBAAK3C,IAAK0C,EAAIE,WAAYC,UAAU,OACjCC,YAASL,SAKlB,2BACE,uBAAQxC,KAAK,UAAU8C,SAAS,UAAhC,UAGA,yBAAKF,UAAU,QACf,uBAAQ5C,KAAK,UAAU+C,QAASlC,GAAhC,cASKH","file":"static/js/50.d9b30478.chunk.js","sourcesContent":["import { FORM_ELEMENT_TYPES } from 'web/src/constants/formFields.constant';\n\nexport const PREPSolutionRequiredFormFields = [\n  {\n    key: 'solution_flc',\n    type: FORM_ELEMENT_TYPES.SWITCH,\n    others: null,\n    customLabel: 'FLC',\n  },\n  {\n    key: 'solution_fsc',\n    type: FORM_ELEMENT_TYPES.SWITCH,\n    others: null,\n    customLabel: 'FSC',\n  },\n  {\n    key: 'solution_crate',\n    type: FORM_ELEMENT_TYPES.SWITCH,\n    others: null,\n    customLabel: 'Crate',\n  },\n  {\n    key: 'solution_ppbox',\n    type: FORM_ELEMENT_TYPES.SWITCH,\n    others: null,\n    customLabel: 'PP Box',\n  },\n  {\n    key: 'part_orientation',\n    kwargs: {\n      placeholder: 'Part Orientation',\n    },\n    type: FORM_ELEMENT_TYPES.INPUT,\n    customLabel: 'Part Orientation',\n  },\n  {\n    key: 'parts_pm',\n    kwargs: {\n      placeholder: 'Parts/PM',\n    },\n    type: FORM_ELEMENT_TYPES.INPUT,\n    customLabel: 'Parts/PM',\n  },\n  {\n    key: 'status',\n    kwargs: {\n      placeholder: 'Select',\n    },\n    type: FORM_ELEMENT_TYPES.SELECT,\n    others: {\n      selectOptions: ['TP Shared', 'CP Shared', 'TP Approved',\n        'CP Approved','Trials Done','Trials Approved'],\n    },\n  },\n]\n","import React, { useState } from 'react';\nimport { Form, Col, Row, Button, Divider, Spin } from 'antd';\nimport formItem from 'hocs/formItem.hoc';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { ADD_PFEP_DATA } from 'common/actions';\nimport { PREPSolutionRequiredFormFields }\n  from 'common/formFields/PFEP/PFEPSolutionRequired.formFields';\nimport { createPFEP } from 'common/api/auth';\n\nexport const PFEPSolutionRequiredForm = ({ id, onCancel,onDone,onNext }) => {\n  const [loading,setLoading] = useState(false);\n  const [form] = Form.useForm();\n  const dispatch = useDispatch();\n  const state =  useSelector(e=>(e.data.pfepData))\n\n\n  const submit = async (data) =>{\n    setLoading(true)\n    await dispatch({ type:ADD_PFEP_DATA,data });\n    setLoading(false)\n    const postResults = await createPFEP(data);\n    console.log(postResults,\"data\");\n  }\n  return (\n    <Spin spinning={loading}>\n      <Divider orientation='left'>Solution Required</Divider>\n      <Form\n        onFinish={submit}\n        form={form}\n        layout='vertical'\n        hideRequiredMark\n        autoComplete='off'\n      >\n        <Row style={{ justifyContent: 'left' }}>\n          {PREPSolutionRequiredFormFields.slice(4, 7).map((item, idx) => (\n            <Col span={6}>\n              <div key={idx.toString()} className='p-2'>\n                {formItem(item)}\n              </div>\n            </Col>\n          ))}\n        </Row>\n        <Row style={{ justifyContent: 'left' }}>\n          {PREPSolutionRequiredFormFields.slice(0, 4).map((item, idx) => (\n            <Col span={2}>\n              <div key={idx.toString()} className='p-2'>\n                {formItem(item)}\n              </div>\n            </Col>\n          ))}\n        </Row>\n        <Row>\n          <Button type='primary' htmlType='submit'>\n            Submit\n          </Button>\n          <div className='p-2' />\n          <Button type='primary' onClick={onDone}>\n            Cancel\n          </Button>\n        </Row>\n      </Form>\n    </Spin>\n  );\n};\n\nexport default PFEPSolutionRequiredForm;\n\n"],"sourceRoot":""}