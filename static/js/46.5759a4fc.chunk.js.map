{"version":3,"sources":["constants/formFields.constant.js","hocs/formItem.hoc.js","../../common/formFields/PFEP/PFEPCreation.formFields.js","../../common/formFields/PFEP/PFEPExsitingPM.formFields.js","forms/PFEP/PFEPExsitingPM.form.js"],"names":["FORM_ELEMENT_TYPES","INPUT","MULTIPLE_CHECKBOX","INPUT_NUMBER","PASSWORD","TEXTAREA","MARKDOWN","SELECT","CAPTCHA","MONTH_PICKER","FILE_DRAG_DROP","RANGE_PICKER","RADIO","SWITCH","HIDDEN","DATE","CASCADER","Option","CheckboxGroup","Group","props","name","action","file","Promise","resolve","reject","setTimeout","reader","FileReader","addEventListener","result","readAsDataURL","FormItem","key","rules","kwargs","type","others","customLabel","noLabel","formOptions","Item","label","charAt","toUpperCase","slice","size","Dragger","style","maxHeight","width","className","p1","p2","shouldUpdate","selectOptions","map","item","index","toString","search","customTitle","value","fontSize","fontWeight","dataKeys","flexWrap","i","marginLeft","marginRight","radioOptions","onChange","date","checkOptions","valuePropName","PREPCreationFormFields","placeholder","PREPExistingPMFormFields","PFEPExsitingPMForm","id","onCancel","onNext","onDone","useState","loading","setLoading","useForm","form","dispatch","useDispatch","state","useSelector","e","data","pfepData","submit","a","ADD_PFEP_DATA","spinning","orientation","onFinish","initialValues","packaging_type","packaging_length","packaging_breadth","packaging_height","pocket_length","pocket_breadth","pocket_height","inserts_pm","paerts_per_layer","total_parts_per_pm","pm_loaded_weight","price_per_unit","remarks","layout","autoComplete","justifyContent","idx","span","formItem","justify","htmlType","disabled","onClick","ArrowRightOutlined"],"mappings":"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","file":"static/js/46.5759a4fc.chunk.js","sourcesContent":["export const FORM_ELEMENT_TYPES = {\r\n  INPUT: 'input',\r\n  MULTIPLE_CHECKBOX: 'MULTIPLE_CHECKBOX',\r\n  INPUT_NUMBER: 'input-number',\r\n  PASSWORD: 'password',\r\n  TEXTAREA: 'textarea',\r\n  MARKDOWN: 'markdown',\r\n  SELECT: 'select',\r\n  CAPTCHA: 'captcha',\r\n  MONTH_PICKER: 'month-picker',\r\n  FILE_DRAG_DROP: 'file-drag-drop',\r\n  RANGE_PICKER: 'range-picker',\r\n  RADIO: 'radio',\r\n  SWITCH: 'switch',\r\n  HIDDEN: 'hidden',\r\n  DATE: 'date',\r\n  CASCADER: 'cascader',\r\n};\r\n\r\nexport const SUBMIT_FORM = 'SUBMIT_FORM';\r\n\r\nexport const CAPTCHA = {\r\n  type: FORM_ELEMENT_TYPES.CAPTCHA,\r\n  name: 'captcha',\r\n  label: 'Captcha',\r\n  rules: [\r\n    {\r\n      required: process.env.NODE_ENV === 'production',\r\n      message: 'Please solve the captcha',\r\n    },\r\n  ],\r\n};\r\n","import React from 'react';\r\nimport {\r\n  Form,\r\n  Input,\r\n  Upload,\r\n  Select,\r\n  Radio,\r\n  DatePicker,\r\n  Checkbox,\r\n  InputNumber,\r\n  message,\r\n  Switch,\r\n} from 'antd';\r\nimport { Icon } from '@ant-design/compatible';\r\nimport { FORM_ELEMENT_TYPES } from 'constants/formFields.constant';\r\n\r\nconst { Option } = Select;\r\nconst CheckboxGroup = Checkbox.Group;\r\n\r\n// const handleUplaod = (file) => {\r\n//   return new Promise(async (resolve, reject) => {\r\n//     const fileName = `nameThatIwant.type`;\r\n//     const url = await S3Fetcher.getPresignedUrl(fileName);\r\n//     resolve(url);\r\n//   });\r\n\r\nconst onCustomRequest = (file) => {\r\n  return new Promise((resolve, reject) => {\r\n    const ajaxResponseWasFine = true;\r\n\r\n    setTimeout(() => {\r\n      if (ajaxResponseWasFine) {\r\n        const reader = new FileReader();\r\n\r\n        reader.addEventListener(\r\n          'load',\r\n          () => {\r\n            resolve(reader.result);\r\n          },\r\n          false,\r\n        );\r\n\r\n        if (file) {\r\n          reader.readAsDataURL(file);\r\n        }\r\n      } else {\r\n        reject('error');\r\n      }\r\n    }, 1000);\r\n  });\r\n};\r\n\r\nconst props = {\r\n  name: 'file',\r\n  action: onCustomRequest,\r\n  // onChange(info) {\r\n  //   const {status} = info.file;\r\n  //   if (status !== 'uploading') {\r\n  //     console.log(info.file, info.fileList);\r\n  //   }\r\n  //   if (status === 'done') {\r\n  //     message.success(`${info.file.name} file uploaded successfully.`);\r\n  //   } else if (status === 'error') {\r\n  //     message.error(`${info.file.name} file upload failed.`);\r\n  //   }\r\n  // },\r\n};\r\n\r\nconst FormItem = ({ key, rules, kwargs, type, others, customLabel, noLabel }) => {\r\n  let formOptions = {};\r\n  if (others) {\r\n    if (others.formOptions) {\r\n      formOptions = others.formOptions;\r\n    }\r\n  }\r\n\r\n  switch (type) {\r\n    case FORM_ELEMENT_TYPES.INPUT: {\r\n      return (\r\n        <Form.Item\r\n          key={key}\r\n          label={noLabel ? null : customLabel || key.charAt(0).toUpperCase() + key.slice(1)}\r\n          name={key}\r\n          rules={rules}\r\n          {...formOptions}>\r\n          <Input {...kwargs} size='middle' />\r\n        </Form.Item>\r\n      );\r\n    }\r\n\r\n    case FORM_ELEMENT_TYPES.INPUT_NUMBER:\r\n      return (\r\n        <Form.Item\r\n          key={key}\r\n          label={noLabel ? null : customLabel || key.charAt(0).toUpperCase() + key.slice(1)}\r\n          name={key}\r\n          rules={rules}\r\n          {...formOptions}>\r\n          <InputNumber {...kwargs} size='middle' />\r\n        </Form.Item>\r\n      );\r\n\r\n    case FORM_ELEMENT_TYPES.FILE_DRAG_DROP:\r\n      return (\r\n        <Form.Item\r\n          key={key}\r\n          label={noLabel ? null : customLabel || key.charAt(0).toUpperCase() + key.slice(1)}\r\n          name={key}\r\n          rules={rules}\r\n          {...formOptions}>\r\n          <Upload.Dragger {...kwargs} {...props} style={{ maxHeight: '75px', width: '150px' }}>\r\n            <p className='ant-upload-drag-icon'>\r\n              <Icon type='inbox' />\r\n            </p>\r\n            {others ? (\r\n              <>\r\n                <p className='ant-upload-text p-1'>{others.p1}</p>\r\n                <p className='ant-upload-hint p-1'>{others.p2}</p>\r\n              </>\r\n            ) : null}\r\n          </Upload.Dragger>\r\n        </Form.Item>\r\n      );\r\n\r\n    case FORM_ELEMENT_TYPES.SELECT:\r\n      return (\r\n        <Form.Item\r\n          shouldUpdate\r\n          key={key}\r\n          label={noLabel ? null : customLabel || key.charAt(0).toUpperCase() + key.slice(1)}\r\n          name={key}\r\n          rules={rules}\r\n          {...formOptions}>\r\n          <Select {...kwargs}>\r\n            {others.selectOptions.map((item, index) => (\r\n              <Option\r\n                key={index.toString()}\r\n                search={item[others.customTitle]}\r\n                value={item.value || item[others.key] || item}>\r\n                {others.customTitle ? (\r\n                  <text style={{ fontSize: 13, fontWeight: 'bold' }}>\r\n                    {item[others.customTitle]}\r\n                  </text>\r\n                ) : (\r\n                  item.label || item[others.key] || item\r\n                )}\r\n                {others.dataKeys ? (\r\n                  <div className='row' style={{ flexWrap: 'wrap' }}>\r\n                    {others.dataKeys.map((i) => (\r\n                      <text style={{ fontSize: 11, marginLeft: 5, marginRight: 5 }}>{item[i]}</text>\r\n                    ))}\r\n                  </div>\r\n                ) : null}\r\n              </Option>\r\n            ))}\r\n          </Select>\r\n        </Form.Item>\r\n      );\r\n\r\n    case FORM_ELEMENT_TYPES.RADIO:\r\n      return (\r\n        <Form.Item\r\n          key={key}\r\n          label={noLabel ? null : customLabel || key.charAt(0).toUpperCase() + key.slice(1)}\r\n          name={key}\r\n          rules={rules}\r\n          {...formOptions}>\r\n          <Radio.Group value='Ggg'>\r\n            {others.radioOptions.map((item) => (\r\n              <Radio key={item.value} value={item.value}>\r\n                {item.label}\r\n              </Radio>\r\n            ))}\r\n          </Radio.Group>\r\n        </Form.Item>\r\n      );\r\n\r\n    case FORM_ELEMENT_TYPES.DATE:\r\n      return (\r\n        <Form.Item\r\n          key={key}\r\n          {...formOptions}\r\n          label={noLabel ? null : customLabel || key.charAt(0).toUpperCase() + key.slice(1)}\r\n          name={key}\r\n          rules={rules}>\r\n          <DatePicker onChange={(date) => console.log(date)} />\r\n        </Form.Item>\r\n      );\r\n    case FORM_ELEMENT_TYPES.MULTIPLE_CHECKBOX:\r\n      return (\r\n        <Form.Item\r\n          key={key}\r\n          label={noLabel ? null : customLabel || key.charAt(0).toUpperCase() + key.slice(1)}\r\n          name={key}\r\n          rules={rules}\r\n          {...formOptions}>\r\n          <CheckboxGroup onChange={others.onChange}>\r\n            {others.checkOptions.map((i) => (\r\n              <Checkbox value={i.value}>{i.label}</Checkbox>\r\n            ))}\r\n          </CheckboxGroup>\r\n        </Form.Item>\r\n      );\r\n    case FORM_ELEMENT_TYPES.SWITCH:\r\n      return (\r\n        <Form.Item\r\n          key={key}\r\n          valuePropName='checked'\r\n          {...formOptions}\r\n          label={noLabel ? null : customLabel || key.charAt(0).toUpperCase() + key.slice(1)}\r\n          name={key}\r\n          rules={rules}>\r\n          <Switch {...kwargs} />\r\n        </Form.Item>\r\n      );\r\n    default:\r\n      return null;\r\n  }\r\n};\r\n\r\nexport default FormItem;\r\n","import { FORM_ELEMENT_TYPES } from 'web/src/constants/formFields.constant';\r\n\r\nexport const PREPCreationFormFields = [\r\n  {\r\n    key: 'proposal_for_client',\r\n    customLabel: 'Proposal For Client',\r\n    type: FORM_ELEMENT_TYPES.INPUT,\r\n    others: null,\r\n    kwargs: {\r\n      placeholder: 'Proposal For Client',\r\n    },\r\n  },\r\n\r\n  {\r\n    key: 'sender_client',\r\n    kwargs: {\r\n      placeholder: 'Sender Client',\r\n    },\r\n    type: FORM_ELEMENT_TYPES.INPUT,\r\n    customLabel: 'Sender Client',\r\n  },\r\n  {\r\n    key: 'sender_location',\r\n    kwargs: {\r\n      placeholder: 'Sender Location',\r\n    },\r\n    type: FORM_ELEMENT_TYPES.INPUT,\r\n    others: null,\r\n    customLabel: 'Sender Location',\r\n  },\r\n  {\r\n    key: 'receiver_client',\r\n    kwargs: {\r\n      placeholder: 'Receiver Client',\r\n    },\r\n    type: FORM_ELEMENT_TYPES.INPUT,\r\n    others: null,\r\n    customLabel: 'Receiver Client',\r\n  },{\r\n    key: 'receiver_location',\r\n    kwargs: {\r\n      placeholder: 'Receiver Location',\r\n    },\r\n    type: FORM_ELEMENT_TYPES.INPUT,\r\n    others: null,\r\n    customLabel: 'Receiver Location',\r\n  },\r\n]\r\n","import { FORM_ELEMENT_TYPES } from 'web/src/constants/formFields.constant';\r\n\r\nexport const PREPExistingPMFormFields = [\r\n  {\r\n    key: 'packaging_type',\r\n    kwargs: {\r\n      placeholder: 'Select',\r\n    },\r\n    type: FORM_ELEMENT_TYPES.SELECT,\r\n    others: {\r\n      selectOptions: ['New Part', 'Corrugated Box', 'Wooden Box',\r\n        'Foldable Crate','STD Foldable Crate',\r\n        'Crate',\r\n        'PP Box',\r\n        'FLC (1200x800x950)',\r\n        'STD FLC (1200x800x950)','FSC (1200x800x650)',\r\n        'STD FSC (1200x800x650)','Wooden Pallet',\r\n        'Plastic Pallet',\r\n        'Palletized Sol - Corrugated Box',\r\n        'Palletized Sol - Wooden box',\r\n        'Palletized Sol - Foldable crate',\r\n        'Palletized Sol - PP Box',\r\n        'Palletized Sol - Bin',\r\n        'Wire Mesh Container','Other Solution'\r\n      ],\r\n    },\r\n    customLabel: 'Packaging Type',\r\n  },\r\n  {\r\n    key: 'packaging_length',\r\n    kwargs: {\r\n      type: 'number',\r\n      placeholder: 'Packaging Length',\r\n    },\r\n    type: FORM_ELEMENT_TYPES.INPUT,\r\n    customLabel: 'Packaging Length',\r\n  },\r\n  {\r\n    key: 'packaging_breadth',\r\n    kwargs: {\r\n      type: 'number',\r\n      placeholder: 'Packaging Breadth',\r\n    },\r\n    type: FORM_ELEMENT_TYPES.INPUT,\r\n    customLabel: 'Packaging Breadth',\r\n  },\r\n  {\r\n    key: 'packaging_height',\r\n    kwargs: {\r\n      type: 'number',\r\n      placeholder: 'Packaging Height',\r\n    },\r\n    type: FORM_ELEMENT_TYPES.INPUT,\r\n    customLabel: 'Packaging Height',\r\n  },\r\n  {\r\n    key: 'pocket_length',\r\n    kwargs: {\r\n      type: 'number',\r\n      placeholder: 'Pocket Length',\r\n    },\r\n    type: FORM_ELEMENT_TYPES.INPUT,\r\n    customLabel: 'Pocket Length',\r\n  },\r\n  {\r\n    key: 'pocket_breadth',\r\n    kwargs: {\r\n      type: 'number',\r\n      placeholder: 'Pocket Breadth',\r\n    },\r\n    type: FORM_ELEMENT_TYPES.INPUT,\r\n    customLabel: 'Pocket Breadth',\r\n  },\r\n  {\r\n    key: 'pocket_height',\r\n    kwargs: {\r\n      type: 'number',\r\n      placeholder: 'Pocket Height',\r\n    },\r\n    type: FORM_ELEMENT_TYPES.INPUT,\r\n    customLabel: 'Pocket Height',\r\n  },\r\n  {\r\n    key: 'inserts_pm',\r\n    kwargs: {\r\n      type: 'number',\r\n      placeholder: 'Inserts Per Packaging Material',\r\n    },\r\n    type: FORM_ELEMENT_TYPES.INPUT,\r\n    others: null,\r\n    customLabel: 'Inset Per PM',\r\n  },\r\n  {\r\n    key: 'separator_sheet_per_pm',\r\n    kwargs: {\r\n      type: 'number',\r\n      placeholder: 'Separator Sheet Per PM',\r\n    },\r\n    type: FORM_ELEMENT_TYPES.INPUT,\r\n    others: null,\r\n    customLabel: 'Separator Sheet Per PM',\r\n  },\r\n  {\r\n    key: 'pocket_matrix_detail',\r\n    kwargs: {\r\n      placeholder: 'Pocket Matrix Detail',\r\n    },\r\n    type: FORM_ELEMENT_TYPES.INPUT,\r\n    others: null,\r\n    customLabel: 'Pocket Matrix Detail',\r\n  },\r\n  {\r\n    key: 'parts_per_pocket',\r\n    kwargs: {\r\n      placeholder: 'Parts per Pocket',\r\n    },\r\n    type: FORM_ELEMENT_TYPES.INPUT,\r\n    others: null,\r\n    customLabel: 'Parts per Pocket',\r\n  },\r\n  {\r\n    key: 'part_in_packet_details',\r\n    kwargs: {\r\n      placeholder: 'Stacking, Nesting or Multiple parts in single Pocket. If any?',\r\n    },\r\n    type: FORM_ELEMENT_TYPES.INPUT,\r\n    others: null,\r\n    customLabel: 'Stacking, Nesting or Multiple parts in single Pocket.',\r\n  },\r\n\r\n  {\r\n    key: 'parts_per_layer',\r\n    kwargs: {\r\n      type: 'number',\r\n      placeholder: 'Part Per Layer',\r\n    },\r\n    type: FORM_ELEMENT_TYPES.INPUT,\r\n    others: null,\r\n    customLabel: 'Part Per Layer',\r\n  },\r\n  {\r\n    key: 'total_parts_per_pm',\r\n    kwargs: {\r\n      type: 'number',\r\n      placeholder: 'Total Part Per PM',\r\n    },\r\n    type: FORM_ELEMENT_TYPES.INPUT,\r\n    others: null,\r\n    customLabel: 'Total Part Per PM',\r\n  },\r\n  {\r\n    key: 'pm_loaded_weight',\r\n    kwargs: {\r\n      type: 'number',\r\n      placeholder: 'PM Loaded Weight(Kgs)',\r\n    },\r\n    type: FORM_ELEMENT_TYPES.INPUT,\r\n    others: null,\r\n    customLabel: 'PM Loaded Weight(Kgs)',\r\n  },\r\n  {\r\n    key: 'pallatized_sol_details',\r\n    kwargs: {\r\n      type: 'number',\r\n      placeholder: 'Pallatized Solution Details',\r\n    },\r\n    type: FORM_ELEMENT_TYPES.INPUT,\r\n    others: null,\r\n    customLabel: 'Pallatized Solution Details',\r\n  },\r\n  {\r\n    key: 'current_packaging_type',\r\n    type: FORM_ELEMENT_TYPES.SELECT,\r\n    others: {\r\n      selectOptions: [\r\n        'Returnable','Non Returnalbe'\r\n      ]\r\n\r\n    },\r\n    customLabel: 'Current Packaging Type',\r\n  },\r\n  {\r\n    key: 'wastage_pm',\r\n    type: FORM_ELEMENT_TYPES.INPUT,\r\n    others: null,\r\n    customLabel: 'Wastage Of PM',\r\n    kwargs: {\r\n      placeholder: 'Wastage Of PM',\r\n    },\r\n  },\r\n  {\r\n    key: 'trips_per_pm',\r\n    type: FORM_ELEMENT_TYPES.INPUT,\r\n    others: null,\r\n    customLabel: 'Trips Per PM Before Scraping',\r\n    kwargs: {\r\n      placeholder: 'Trips Per PM Before Scraping',\r\n    },\r\n  },\r\n  {\r\n    key: 'price_per_unit',\r\n    kwargs: {\r\n      type:'number',\r\n      placeholder: 'Price Per Unit',\r\n    },\r\n    type: FORM_ELEMENT_TYPES.INPUT,\r\n    others: null,\r\n    customLabel: 'Price Per Unit',\r\n  },\r\n  {\r\n    key: 'remarks',\r\n    kwargs: {\r\n      placeholder: 'Remark',\r\n    },\r\n    type: FORM_ELEMENT_TYPES.INPUT,\r\n    others: null,\r\n  },\r\n]\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Form, Col, Row, Button, Divider, Spin } from 'antd';\r\nimport { PREPExistingPMFormFields } from 'common/formFields/PFEP/PFEPExsitingPM.formFields';\r\nimport formItem from 'hocs/formItem.hoc';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { ADD_PFEP_DATA } from 'common/actions';\r\nimport { PREPCreationFormFields } from 'common/formFields/PFEP/PFEPCreation.formFields';\r\nimport { ArrowRightOutlined } from '@ant-design/icons';\r\n\r\nexport const PFEPExsitingPMForm = ({ id, onCancel,onDone,onNext }) => {\r\n  const [loading,setLoading] = useState(false);\r\n  const [form] = Form.useForm();\r\n  const dispatch = useDispatch();\r\n  const state =  useSelector(e=>(e.data.pfepData))\r\n\r\n  const submit = async (data) =>{\r\n    setLoading(true)\r\n    await dispatch({ type:ADD_PFEP_DATA,data });\r\n    setLoading(false)\r\n    onNext();\r\n  }\r\n\r\n  return (\r\n    <Spin spinning={loading}>\r\n      <Divider orientation='left'>Existing Package Material</Divider>\r\n      <Form\r\n        onFinish={submit}\r\n        form={form}\r\n        initialValues={{\r\n          packaging_type:state.packaging_type?state.packaging_type:null,\r\n          packaging_length:state.packaging_length?state.packaging_length:null,\r\n          packaging_breadth:state.packaging_breadth?state.packaging_breadth:null,\r\n          packaging_height:state.packaging_height?state.packaging_height:null,\r\n          pocket_length:state.pocket_length?state.pocket_length:null,\r\n          pocket_breadth:state.pocket_breadth?state.pocket_breadth:null,\r\n          pocket_height:state.pocket_height?state.pocket_height:null,\r\n          inserts_pm:state.inserts_pm?state.inserts_pm:null,\r\n          paerts_per_layer:state.paerts_per_layer?state.paerts_per_layer:null,\r\n          total_parts_per_pm:state.total_parts_per_pm?state.total_parts_per_pm:null,\r\n          pm_loaded_weight:state.pm_loaded_weight?state.pm_loaded_weight:null,\r\n          price_per_unit:state.price_per_unit?state.price_per_unit:null,\r\n          remarks:state.remarks?state.remarks:null,\r\n        }}\r\n        layout='vertical'\r\n        // hideRequiredMark\r\n        autoComplete='off'\r\n      >\r\n        <Row style={{ justifyContent: 'left' }}>\r\n          {PREPExistingPMFormFields.slice(0, 4).map((item, idx) => (\r\n            <Col span={6}>\r\n              <div key={idx.toString()} className='p-2'>\r\n                {formItem(item)}\r\n              </div>\r\n            </Col>\r\n          ))}\r\n        </Row>\r\n        <Row style={{ justifyContent: 'left' }}>\r\n          {PREPExistingPMFormFields.slice(4, 8).map((item, idx) => (\r\n            <Col span={6}>\r\n              <div key={idx.toString()} className='p-2'>\r\n                {formItem(item)}\r\n              </div>\r\n            </Col>\r\n          ))}\r\n        </Row>\r\n        <Row style={{ justifyContent: 'left' }}>\r\n          {PREPExistingPMFormFields.slice(8, 12).map((item, idx) => (\r\n            <Col span={6}>\r\n              <div key={idx.toString()} className='p-2'>\r\n                {formItem(item)}\r\n              </div>\r\n            </Col>\r\n          ))}\r\n        </Row>\r\n        <Row style={{ justifyContent: 'left' }}>\r\n          {PREPExistingPMFormFields.slice(12, 16).map((item, idx) => (\r\n            <Col span={6}>\r\n              <div key={idx.toString()} className='p-2'>\r\n                {formItem(item)}\r\n              </div>\r\n            </Col>\r\n          ))}\r\n        </Row>\r\n        <Row style={{ justifyContent: 'left' }}>\r\n          {PREPExistingPMFormFields.slice(16, 17).map((item, idx) => (\r\n            <Col span={4}>\r\n              <div key={idx.toString()} className='p-2'>\r\n                {formItem(item)}\r\n              </div>\r\n            </Col>\r\n          ))}\r\n          {PREPExistingPMFormFields.slice(17, 21).map((item, idx) => (\r\n            <Col span={5}>\r\n              <div key={idx.toString()} className='p-2'>\r\n                {formItem(item)}\r\n              </div>\r\n            </Col>\r\n          ))}\r\n        </Row>\r\n        <Row justify='space-between'>\r\n          <div className='row'>\r\n            <Button type='primary' htmlType='submit' disabled>\r\n              Submit\r\n            </Button>\r\n            <div className='p-2' />\r\n            <Button type='primary' onClick={onCancel}>\r\n              Cancel\r\n            </Button>\r\n          </div>\r\n          <Button type='link' htmlType='submit'>\r\n            <ArrowRightOutlined style={{ fontSize:30 }}  />\r\n          </Button>\r\n        </Row>\r\n      </Form>\r\n    </Spin>\r\n  );\r\n};\r\n\r\nexport default PFEPExsitingPMForm;\r\n\r\n"],"sourceRoot":""}